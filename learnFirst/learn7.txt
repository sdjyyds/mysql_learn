# 1、创建数据库test01_library
CREATE DATABASE IF NOT EXISTS test01_library CHARACTER SET 'utf8mb4';
USE test01_office;
# 2、创建表 books，表结构如下：
CREATE TABLE IF NOT EXISTS books(id INT,NAME VARCHAR(50),`authors` VARCHAR(100),price FLOAT,pubdate DATE,note VARCHAR(100),num INT)
# 3、向books表中插入记录
SHOW TABLES;
INSERT INTO books
VALUES(1 ,'Tal of AAA', 'Dickes', 23 ,'1995', 'novel', 11)
SELECT * FROM books;
ALTER TABLE books
MODIFY pubdate YEAR;

UPDATE books
SET pubdate='1995'
WHERE id=1;
DELETE FROM books;
INSERT INTO books(id,`name`,`authors`,price,pubdate,note,num)
VALUES(2, 'EmmaT', 'Jane lura', 35 ,'1993','joke', 22);

INSERT INTO books(id,`name`,`authors`,price,pubdate,note,num)
VALUES(3, 'Story of Jane', 'Jane Tim', 40, '2001' ,'novel', 0);

INSERT INTO books(id,`name`,`authors`,price,pubdate,note,num)
VALUES(4 ,'Lovey Day', 'George Byron', 20, '2005', 'novel', 30);

INSERT INTO books(id,`name`,`authors`,price,pubdate,note,num)
VALUES(5 ,'Old land', 'Honore Blade' ,30, '2010', 'law', 0);

INSERT INTO books(id,`name`,`authors`,price,pubdate,note,num)
VALUES(6, 'The Battle', 'Upton Sara' ,30, '1999' ,'medicine' ,40);

INSERT INTO books(id,`name`,`authors`,price,pubdate,note,num)
VALUES(7 ,'Rose Hood' ,'Richard haggard', 28, '2008', 'cartoon', 28);

# 1）不指定字段名称，插入第一条记录

# 2）指定所有字段名称，插入第二记录
# 3）同时插入多条记录（剩下的所有记录）

# 4、将小说类型(novel)的书的价格都增加5。
SELECT * FROM books;
UPDATE books
SET price=5+price
WHERE note='novel';
# 5、将名称为EmmaT的书的价格改为40，并将说明改为drama。
UPDATE books
SET price=40,note='drama'
WHERE NAME='EmmaT';


# 6、删除库存为0的记录。
COMMIT;
SET autocommit=FALSE;
DELETE FROM books
WHERE num=0;
# 7、统计书名中包含a字母的书
SELECT * FROM books;
SELECT COUNT(1)
FROM books
WHERE `name` LIKE '%a%';
# 8、统计书名中包含a字母的书的数量和库存总量
SELECT COUNT(1),SUM(num)
FROM books
WHERE `name` LIKE '%a%';


# 9、找出“novel”类型的书，按照价格降序排列
SELECT *
FROM books
WHERE note='novel'
ORDER BY price DESC;

# 10、查询图书信息，按照库存量降序排列，如果库存量相同的按照note升序排列
SELECT *
FROM books
ORDER BY num DESC,note ASC;

# 11、按照note分类统计书的数量
SELECT note,SUM(num)
FROM books
GROUP BY note;

# 12、按照note分类统计书的库存量，显示库存量超过30本的
SELECT note,SUM(num) sum_num
FROM books
GROUP BY note
HAVING sum_num>30;

# 13、查询所有图书，每页显示5本，显示第二页
SELECT *
FROM books
LIMIT 5,5;

# 14、按照note分类统计书的库存量，显示库存量最多的

SELECT note,SUM(num) AS"s_n"
FROM books
GROUP BY note
HAVING s_n>=ALL(SELECT SUM(num) 
	       FROM books
	       GROUP BY note);

SELECT note,SUM(num) AS"s_n"
FROM books
GROUP BY note
ORDER BY s_n DESC
LIMIT 0,1;

# 15、查询书名达到10个字符的书，不包括里面的空格
SELECT * 
FROM books 
WHERE CHAR_LENGTH(REPLACE(NAME,' ',''))>=10;

# 16、查询书名和类型，其中note值为novel显示小说，law显示法律，medicine显示医药，cartoon显示卡通，#joke显示笑话
SELECT NAME,CASE note
	    WHEN 'novel' THEN '小说'
	    WHEN 'law'	 THEN '法律'
	    WHEN 'medicine'THEN '医药'
	    WHEN 'cartoon' THEN '卡通'
	    WHEN 'joke'    THEN '笑话'
	    END 
FROM books;


# 17、查询书名、库存，其中num值超过30本的，显示滞销，大于0并低于10的，显示畅销，为0的显示需要无货
SELECT NAME,num,CASE 
		WHEN num>30 THEN '滞销'
		WHEN num<10 AND num>0 THEN '畅销'
		WHEN num=0  THEN'无货'
		END "state"
FROM books;

# 18、统计每一种note的库存量，并合计总量
SELECT note,SUM(num)
FROM books
GROUP BY note WITH ROLLUP;

# 19、统计每一种note的数量，并合计总量
SELECT note,COUNT(1)
FROM books
GROUP BY note WITH ROLLUP;
# 20、统计库存量前三名的图书
SELECT *
FROM books
ORDER BY num DESC
LIMIT 0,3;

# 21、找出最早出版的一本书
SELECT *
FROM books
ORDER BY pubdate 
LIMIT 0,1;

# 22、找出novel中价格最高的一本书
SELECT *
FROM books
ORDER BY price DESC
linit 0,1;

SELECT *
FROM books
WHERE price=(SELECT MAX(price)
	     FROM books);

# 23、找出书名中字数最多的一本书，不含空格

SELECT * 
FROM books 
ORDER BY CHAR_LENGTH(REPLACE(NAME,' ','')) DESC 
LIMIT 0,1;